buildscript {
    ext {
        versions_plugin_version = '0.51.0'
        kotlin_version = '2.0.21'
        okio_version = '3.9.1'
        jackson_version = '2.18.1'
        woodstox_version = '7.1.0'
        commons_text = '1.12.0'
        commons_email = '1.6.0'
        velocity = '2.4.1'
        clikt = '2.8.0'
        slf4j = '2.0.16'
        junit = '4.13.2'
        mockk_version = '1.13.13'
    }

    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
}

plugins {
    id "com.github.ben-manes.versions" version "$versions_plugin_version"
    id "org.jetbrains.kotlin.jvm" version "$kotlin_version"
}

allprojects {
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'org.jetbrains.kotlin.jvm'

    version = '2.2-SNAPSHOT'

    base {
        archivesName = "${rootProject.name}-${project.name}"
    }

    kotlin {
        jvmToolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    dependencies {
        testImplementation "junit:junit:$junit"
    }
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

tasks.named("dependencyUpdates").configure {
    // disallow release candidates as upgradable versions from stable versions
    rejectVersionIf {
        isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
    }
}
