apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'com.github.ben-manes.versions'

buildscript {
    ext.java_version = '1.8'
    ext.kotlin_version = '1.5.31'
    ext.jackson_version = '2.13.0'

    repositories {
        mavenCentral()
        gradlePluginPortal()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.ben-manes:gradle-versions-plugin:0.39.0"
    }
}

version = '2.1.3'

repositories {
     mavenCentral()
}

mainClassName = 'com.munzenberger.feed.AppKt'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.apache.commons:commons-email:1.5"
    implementation "org.apache.commons:commons-text:1.9"
    implementation "org.apache.velocity:velocity:1.7"
    implementation "com.squareup.okio:okio:2.10.0"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:$jackson_version"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jackson_version"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
    implementation "com.fasterxml.woodstox:woodstox-core:6.2.6"
    implementation "com.github.ajalt:clikt:2.8.0"

    testImplementation 'junit:junit:4.13.2'
    testImplementation "io.mockk:mockk:1.12.0"
}

compileJava   {
    targetCompatibility = "$java_version"
}

compileTestJava   {
    targetCompatibility = "$java_version"
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "$java_version"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "$java_version"
    }
}

task createProperties(dependsOn: processResources) {
    doLast {
        new File("$buildDir/resources/main/version.properties").withWriter { w ->
            Properties p = new Properties()
            p.put 'version', project.version.toString()
            p.store w, null
        }
    }
}

classes {
    dependsOn createProperties
}
